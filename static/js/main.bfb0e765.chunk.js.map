{"version":3,"sources":["shared/colors.js","shared/dates.js","component/EventForm/EventForm.js","redux/action/calendar.js","redux/action/types.js","component/CalendarView/CalendarView.js","container/CalendarWrapper/CalendarWrapper.js","App.js","redux/reducer/calendar.js","redux/rootReducer.js","index.js"],"names":["colourOptions","value","label","color","fromDate","date","moment","format","split","toDate","str","customStyles","option","provided","state","isSelected","backgroundColor","Option","components","IconOption","props","className","aria-hidden","style","data","margin","EventForm","handleChange","event","target","name","setState","handleChangeDateTime","type","handleChangeSelect","selectedOption","handleFormSubmit","preventDefault","editEvent","closeForm","id","inputsValue","title","startDate","start","currentDate","startTime","time","notes","top","this","coordinates","left","onClick","onSubmit","placeholder","onChange","classNamePrefix","defaultValue","options","isEdit","removeEvent","createEvent","React","Component","connect","calendar","dispatch","console","log","CalendarView","calendarComponentRef","createRef","calendarWeekends","createEventForm","rect","jsEvent","toElement","getBoundingClientRect","bottom","height","openEventForm","editEventForm","openEventFormWithValues","extendedProps","getCoordinates","defaultView","header","center","right","buttonText","today","month","week","day","list","prev","next","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","ref","weekends","events","calendarEvents","dateClick","eventClick","firstDay","selectable","editable","droppable","eventDrop","drop","eventReceive","showEventForm","currentDay","values","CalendarWrapper","App","initialState","Date","combineReducers","action","defaultInputValues","length","push","filter","key","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfb0e765.chunk.js","sourcesContent":["export const colourOptions = [\n    { value: 'blue', label: 'Blue', color: '#3B86FF'},\n    { value: 'ocean', label: 'Ocean', color: '#05b4d9' },\n    { value: 'purple', label: 'Purple', color: '#644faa' },\n    { value: 'red', label: 'Red', color: '#e75339'},\n    { value: 'orange', label: 'Orange', color: '#ff8a0d' },\n    { value: 'yellow', label: 'Yellow', color: '#ffc400' },\n    { value: 'green', label: 'Green', color: '#36B37E' },\n    { value: 'forest', label: 'Forest', color: '#00875A' },\n    { value: 'slate', label: 'Slate', color: '#2f4c58' },\n    { value: 'silver', label: 'Silver', color: '#757a73' },\n];","import moment from \"moment\";\n\nexport const FORMAT = 'YYYY-MM-DD|HH:mm';\n\nexport function fromDate(date) {\n    return moment(date).format(FORMAT).split('|')\n}\n\nexport function toDate(str) {\n    return moment(str, FORMAT).toDate()\n}\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport { colourOptions } from '../../shared/colors';\nimport Select, {components} from 'react-select';\nimport {closeForm, createEvent, editEvent, removeEvent} from '../../redux/action/calendar'\nimport {fromDate} from \"../../shared/dates\";\n\nimport './EventForm.scss'\n\nconst customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        color: state.isSelected ? 'yellow' : 'black',\n        backgroundColor: state.isSelected ? 'green' : 'white'\n    }),\n}\n\nconst { Option } = components\nconst IconOption = props => (\n    <Option {...props}>\n        <i className=\"fa fa-square\" aria-hidden=\"true\" style={{ color: props.data.color, margin: '0 4px 0 0' }}/>\n        {props.data.label}\n    </Option>\n);\n\nclass EventForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state  = {\n            id: this.props.inputsValue.id,\n            title: this.props.inputsValue.title || \"\",\n            startDate: fromDate(this.props.inputsValue.start || this.props.currentDate)[0],\n            startTime: fromDate(this.props.inputsValue.time)[1],\n            notes: this.props.inputsValue.notes || '',\n            color: ''\n        }\n    }\n\n    handleChange = (event) => {\n        if (!(event && event.target && event.target.name)) {\n            return;\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleChangeDateTime = (event, type) => {\n        if (!(event && event.target)) {\n            return;\n        }\n        this.setState({\n            [type]: event.target.value,\n        })\n    }\n\n    handleChangeSelect = (selectedOption) => {\n        this.setState({\n            color: selectedOption.color\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    editEvent = () => {\n        this.props.editEvent(this.state)\n        this.props.closeForm()\n    }\n\n    render() {\n        return (\n            <div className=\"form-wrapper\" style={{top: this.props.coordinates.top, left: this.props.coordinates.left}}>\n                <button className=\"btn-close\" type=\"button\" onClick={this.props.closeForm}>\n                    <i className=\"fa fa-times-circle-o\" aria-hidden=\"true\"/>\n                </button>\n                <form onSubmit={this.handleFormSubmit}>\n                    <input\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.id}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"event name\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                    />\n\n                    <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"/>\n                    <input\n                        type=\"date\"\n                        name=\"date\"\n                        placeholder=\"event date\"\n                        value={this.state.startDate}\n                        onChange={event => this.handleChangeDateTime(event, 'startDate')}\n                    />\n\n                    <i className=\"fa fa-clock-o\" aria-hidden=\"true\"/>\n                    <input\n                        type=\"time\"\n                        name=\"time\"\n                        placeholder=\"event time\"\n                        value={this.state.startTime}\n                        onChange={event => this.handleChangeDateTime(event, 'startTime')}\n                    />\n                    <Select\n                        classNamePrefix='custom-select'\n                        defaultValue={colourOptions[0]}\n                        options={colourOptions}\n                        style={customStyles}\n                        onChange={this.handleChangeSelect}\n                        components={{ Option: IconOption }}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"notes\"\n                        placeholder=\"notes\"\n                        value={this.state.notes}\n                        onChange={this.handleChange}\n                    />\n                    { this.props.isEdit\n                        ? (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={() => this.props.removeEvent(this.props.inputsValue.id)}>Discard</button>\n                                <button type='button' onClick={this.editEvent}>Edit</button>\n                            </div>\n                        )\n                        : (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={this.props.closeForm}>Cancel</button>\n                                <button type='button' onClick={() => this.props.createEvent(this.state)}>Save</button>\n                            </div>\n                        )\n                    }\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentDate: state.calendar.currentDate,\n        inputsValue: state.calendar.inputsValue,\n        isEdit: state.calendar.isEdit,\n        coordinates: state.calendar.coordinates\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createEvent: data => dispatch(createEvent(data)),\n        editEvent: data => dispatch(editEvent(data)),\n        removeEvent: id => dispatch(removeEvent(id)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventForm);\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from './types'\n\nexport function openEventForm(currentDate, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM,\n        coordinates,\n        currentDate\n    }\n}\n\nexport function openEventFormWithValues(values, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM_WITH_VALUE,\n        values,\n        coordinates\n    }\n}\n\nexport function editEvent(data) {\n    return {\n        type: EDIT_EVENT,\n        data,\n    }\n}\n\nexport function createEvent(data) {\n    return {\n        type: CREATE_EVENT,\n        data,\n    }\n}\n\nexport function removeEvent(id) {\n    console.log(id)\n    return {\n        type: REMOVE_EVENT,\n        id\n    }\n}\n\nexport function closeForm() {\n    return {\n        type: CLOSE_FORM\n    }\n}\n","export const SHOW_EVENT_FORM = 'SHOW_EVENT_FORM'\nexport const SHOW_EVENT_FORM_WITH_VALUE = 'SHOW_EVENT_FORM_WITH_VALUE'\nexport const CREATE_EVENT = 'CREATE_EVENT'\nexport const EDIT_EVENT = 'EDIT_EVENT'\nexport const REMOVE_EVENT = 'REMOVE_EVENT'\nexport const CLOSE_FORM = 'CLOSE_FORM'\n","import React from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport timeGridPlugin from \"@fullcalendar/timegrid\"\nimport listPlugin from '@fullcalendar/list'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport {connect} from 'react-redux'\nimport {closeForm, openEventForm, openEventFormWithValues} from '../../redux/action/calendar'\n\nimport './CalendarView.scss'\n\nclass CalendarView extends React.Component {\n\n    calendarComponentRef = React.createRef();\n    state = {\n        calendarWeekends: true,\n    }\n\n    createEventForm = event => {\n        const rect = event.jsEvent.toElement.getBoundingClientRect()\n        const coordinates = {\n            top: rect.bottom - (rect.height/2),\n            left: rect.left\n        }\n        this.props.closeForm()\n        this.props.openEventForm(event.date, coordinates)\n    }\n\n    editEventForm = (event) => {\n        const rect = event.jsEvent.toElement.getBoundingClientRect()\n        this.props.openEventFormWithValues({\n            id: +event.event.id,\n            title: event.event.title,\n            start: event.event.start,\n            time: event.event.start,\n            notes: event.event.extendedProps.notes\n        }, this.getCoordinates(rect))\n    }\n\n    getCoordinates = (rect) => {\n        return  {\n            top: rect.bottom - (rect.height/2) + 20,\n            left: rect.left - 20\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='calendar-wrapper'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    header={{\n                        left: \"today,prev,next\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                    }}\n                    buttonText={{\n                        today: 'Today',\n                        month: 'Month',\n                        week: 'Week',\n                        day: 'Day',\n                        list: 'Agenda',\n                        prev: 'Back',\n                        next: 'Next',\n\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={[...this.props.calendarEvents]}\n                    dateClick={this.createEventForm}\n                    eventClick={this.editEventForm}\n                    firstDay={1}\n                    selectable={true}\n                    editable={true}\n                    droppable={true}\n                    eventDrop={this.drop}\n                    eventReceive={this.eventReceive}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        calendarEvents: state.calendar.calendarEvents,\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        openEventForm: (currentDay, coordinates) => dispatch(openEventForm(currentDay, coordinates)),\n        openEventFormWithValues: (values, coordinates) => dispatch(openEventFormWithValues(values, coordinates)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport './CalendarWrapper.scss'\n\nimport EventPopover from '../../component/EventForm/EventForm'\nimport CalendarView from '../../component/CalendarView/CalendarView'\n\nclass CalendarWrapper extends React.Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <CalendarView />\n                {this.props.showEventForm ? <EventPopover/> : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\n\nexport default connect(mapStateToProps )(CalendarWrapper)\n","import React from 'react';\nimport CalendarWrapper from './container/CalendarWrapper/CalendarWrapper'\n\nfunction App() {\n  return (\n        <CalendarWrapper/>\n  )\n}\n\nexport default App\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from '../action/types'\nimport {toDate} from \"../../shared/dates\";\n\nconst initialState = {\n    showEventForm: false,\n    calendarEvents: [\n        {\n            id: 0,\n            title: 'My test event',\n            start: new Date(),\n            time: '',\n            notes: 'fu',\n            color: 'blur'\n        }\n    ],\n    coordinates: {},\n    inputsValue: {},\n    isEdit: false,\n    currentDate: '',\n}\n\nexport default function calendar(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SHOW_EVENT_FORM: {\n            const date = action.currentDate || new Date()\n            const defaultInputValues = {\n                id: state.calendarEvents.length,\n                start: date,\n                time: date,\n                title: '',\n                notes: '',\n                color: ''\n            }\n            return {\n                ...state,\n                showEventForm: true,\n                coordinates: action.coordinates,\n                inputsValue: defaultInputValues\n            }\n        }\n\n        case SHOW_EVENT_FORM_WITH_VALUE: {\n            return {\n                ...state,\n                showEventForm: true,\n                inputsValue: action.values,\n                coordinates: action.coordinates,\n                isEdit: true\n            }\n        }\n\n        case CREATE_EVENT:\n            const calendarEvents = [...state.calendarEvents]\n            calendarEvents.push({\n                id: calendarEvents.length,\n                title: action.data.title,\n                start: toDate(`${action.data.startDate}|${action.data.startTime}`),\n                time: action.data.time,\n                notes: action.data.notes,\n                color: action.data.color,\n            })\n            return {\n                ...state,\n                showEventForm: false,\n                calendarEvents,\n            }\n\n        case EDIT_EVENT:\n            if (state.calendarEvents[action.data.id]) {\n                state.calendarEvents[action.data.id] = {\n                    id: action.data.id,\n                    title: action.data.title,\n                    start: toDate(`${action.data.startDate}|${action.data.startTime}`),\n                    time: action.data.time,\n                    notes: action.data.notes,\n                    color: action.data.color,\n                }\n            }\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents],\n            }\n\n        case REMOVE_EVENT:\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents].filter((value, key) => key !== action.id),\n                showEventForm: false,\n            }\n\n        case CLOSE_FORM:\n            return {\n                ...state,\n                showEventForm: false,\n            }\n\n        default :\n            return state;\n    }\n\n}\n","import {combineReducers} from 'redux';\nimport calendar from './reducer/calendar'\n\nexport default combineReducers({\n    calendar: calendar\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer'\nimport reduxThunk from 'redux-thunk'\n\nconst loggerMiddleware = store => next => action => {\n    const result = next(action);\n    return result;\n};\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware,reduxThunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}