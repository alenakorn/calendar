{"version":3,"sources":["shared/colors.js","redux/action/calendar.js","redux/action/types.js","shared/dates.js","shared/eventModel.js","component/EventForm/EventForm.js","component/CalendarView/CalendarView.js","container/CalendarWrapper/CalendarWrapper.js","App.js","redux/reducer/calendar.js","redux/rootReducer.js","index.js"],"names":["colourOptions","value","label","color","setToLocalStorage","type","fromDate","date","moment","format","split","prepareEventItem","props","id","start","time","title","notes","extendedProps","backgroundColor","colorData","str","startDate","startTime","toDate","inputsValue","currentDate","Option","components","IconOption","className","aria-hidden","style","data","margin","EventForm","escCloseFunction","event","keyCode","closeForm","handleClickOutside","handleChange","target","name","setState","handleChangeDateTime","handleChangeSelect","selectedOption","handleFormSubmit","preventDefault","editEvent","state","document","addEventListener","this","removeEventListener","top","coordinates","left","onClick","onSubmit","maxLength","placeholder","onChange","htmlFor","classNamePrefix","defaultValue","options","isEdit","removeEvent","createEvent","React","Component","connect","calendar","dispatch","payload","onClickOutside","CalendarView","calendarComponentRef","createRef","calendarWeekends","createEventForm","openEventForm","getCoordinates","editEventForm","info","openEventFormWithValues","isTypeEdit","elem","jsEvent","toElement","container","getDomParentElement","rectElement","getBoundingClientRect","rectContainer","Math","round","height","droppedEvent","getEventsFromLocalStorage","levelUp","destination","i","parentElement","calendarPlugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","defaultView","header","center","right","buttonText","today","month","week","day","list","prev","next","plugins","ref","weekends","events","calendarEvents","dateClick","eventClick","firstDay","selectable","editable","droppable","eventDrop","eventReceive","nowIndicator","showEventForm","currentDay","values","CalendarWrapper","App","initialState","combineReducers","action","Date","length","push","filter","key","window","localStorage","setItem","JSON","stringify","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5648cc7d.chunk.js","sourcesContent":["export const colourOptions = [\n    { value: 'blue', label: 'Blue', color: '#3B86FF'},\n    { value: 'ocean', label: 'Ocean', color: '#05b4d9' },\n    { value: 'purple', label: 'Purple', color: '#644faa' },\n    { value: 'red', label: 'Red', color: '#e75339'},\n    { value: 'orange', label: 'Orange', color: '#ff8a0d' },\n    { value: 'yellow', label: 'Yellow', color: '#ffc400' },\n    { value: 'green', label: 'Green', color: '#36B37E' },\n    { value: 'forest', label: 'Forest', color: '#00875A' },\n    { value: 'slate', label: 'Slate', color: '#2f4c58' },\n    { value: 'silver', label: 'Silver', color: '#757a73' },\n]\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT, DROPPED_EVENT,\n    EDIT_EVENT,\n    GET_EVENT_FROM_LOCAL_STORAGE,\n    SET_TO_LOCAL_STORAGE,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from './types'\n\nexport function openEventForm(currentDate, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM,\n        payload: {\n            coordinates,\n            currentDate\n        }\n    }\n}\n\nexport function openEventFormWithValues(values, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM_WITH_VALUE,\n        payload: {\n            values,\n            coordinates\n        }\n    }\n}\n\nexport function editEvent(data) {\n    return dispatch => {\n        dispatch({type: EDIT_EVENT, payload: data})\n        dispatch(setToLocalStorage())\n    }\n}\n\nexport function createEvent(data) {\n    return dispatch => {\n        dispatch({type: CREATE_EVENT, payload: data})\n        dispatch(setToLocalStorage())\n    }\n}\n\nexport function removeEvent(id) {\n    return dispatch => {\n        dispatch({type: REMOVE_EVENT, payload: id})\n        dispatch(setToLocalStorage())\n    }\n}\n\nexport function closeForm() {\n    return {\n        type: CLOSE_FORM\n    }\n}\n\nexport function droppedEvent(id, date) {\n    return dispatch => {\n        dispatch({\n            type: DROPPED_EVENT,\n            payload: {\n                id,\n                date\n            }\n        })\n        dispatch(setToLocalStorage())\n    }\n}\n\nexport function setToLocalStorage() {\n    return {\n        type: SET_TO_LOCAL_STORAGE\n    }\n}\n\nexport function getEventsFromLocalStorage() {\n    return {\n        type: GET_EVENT_FROM_LOCAL_STORAGE\n    }\n}","export const SHOW_EVENT_FORM = 'SHOW_EVENT_FORM'\nexport const SHOW_EVENT_FORM_WITH_VALUE = 'SHOW_EVENT_FORM_WITH_VALUE'\nexport const CREATE_EVENT = 'CREATE_EVENT'\nexport const EDIT_EVENT = 'EDIT_EVENT'\nexport const REMOVE_EVENT = 'REMOVE_EVENT'\nexport const CLOSE_FORM = 'CLOSE_FORM'\nexport const DROPPED_EVENT = 'DROPPED_EVENT'\nexport const SET_TO_LOCAL_STORAGE = 'SET_TO_LOCAL_STORAGE'\nexport const GET_EVENT_FROM_LOCAL_STORAGE = 'GET_EVENT_FROM_LOCAL_STORAGE'\n","import moment from 'moment'\n\nexport const FORMAT = 'YYYY-MM-DD|HH:mm'\n\nexport function fromDate(date) {\n    return moment(date).format(FORMAT).split('|')\n}\n\nexport function toDate(str) {\n    return moment(str, FORMAT).toDate()\n}\n","import {fromDate, toDate} from './dates'\nimport {colourOptions} from './colors'\n\nexport const prepareEventItem = (type, props) => {\n\n    switch (type) {\n\n        case 'SHOW_EVENT_FORM':\n            return {\n                id: props.id,\n                start: props.date,\n                time: props.date,\n                title: '',\n                notes: '',\n                color: ''\n            }\n            \n        case 'SHOW_EVENT_FORM_WITH_VALUE':\n            return {\n                id: +props.id,\n                title: props.title,\n                start: props.start,\n                time: props.start,\n                notes: props.extendedProps.notes,\n                color: props.backgroundColor,\n                colorData: props.extendedProps.colorData\n            }\n\n        case 'CREATE_EVENT':\n        case 'EDIT_EVENT':\n            return {\n                id: props.id,\n                title: props.title,\n                start: toDate(`${props.startDate}|${props.startTime}`),\n                time: props.time,\n                notes: props.notes,\n                color: props.color.color,\n                colorData: props.colorData\n            }\n\n        default:\n            return {\n                id: props.inputsValue.id,\n                title: props.inputsValue.title || '',\n                startDate: fromDate(props.inputsValue.start || props.currentDate)[0],\n                startTime: fromDate(props.inputsValue.time)[1],\n                notes: props.inputsValue.notes || '',\n                color: props.inputsValue.colorData || colourOptions[0],\n                colorData: props.inputsValue.colorData || colourOptions[0]\n            }\n    }\n\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport onClickOutside from 'react-onclickoutside'\nimport Select, {components} from 'react-select'\nimport {colourOptions} from '../../shared/colors'\nimport {closeForm, createEvent, editEvent, removeEvent} from '../../redux/action/calendar'\nimport {prepareEventItem} from '../../shared/eventModel'\nimport './EventForm.scss'\n\nconst { Option } = components\nconst IconOption = props => (\n    <Option {...props}>\n        <i className=\"fa fa-square\" aria-hidden=\"true\" style={{ color: props.data.color, margin: '0 4px 0 0' }}/>\n        {props.data.label}\n    </Option>\n)\n\nclass EventForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = prepareEventItem('DEFAULT', this.props)\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.escCloseFunction, false)\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.escCloseFunction, false)\n    }\n\n    escCloseFunction = event => {\n        if(event.keyCode === 27) {\n            this.props.closeForm()\n        }\n    }\n\n    handleClickOutside = () => {\n        this.props.closeForm()\n    }\n\n    handleChange = (event) => {\n        if (!(event && event.target && event.target.name)) {\n            return\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleChangeDateTime = (event, type) => {\n        if (!(event && event.target)) {\n            return\n        }\n        this.setState({\n            [type]: event.target.value,\n        })\n    }\n\n    handleChangeSelect = (selectedOption) => {\n        this.setState({\n            color: selectedOption,\n            colorData: selectedOption,\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    editEvent = () => {\n        this.props.editEvent(this.state)\n        this.props.closeForm()\n    }\n\n    render() {\n        return (\n            <div className=\"form-wrapper\" style={{top: this.props.coordinates.top, left: this.props.coordinates.left}}>\n                <button className=\"btn-close\" type=\"button\" onClick={this.props.closeForm}>\n                    <i className=\"fa fa-times-circle-o\" aria-hidden=\"true\"/>\n                </button>\n                <form onSubmit={this.handleFormSubmit}>\n                    <input\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.id}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        maxLength={30}\n                        placeholder=\"event name\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                    />\n                    <div className=\"input-wrap\">\n                        <label htmlFor=\"date\">\n                            <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"/>\n                        </label>\n                        <input\n                            id=\"date\"\n                            type=\"date\"\n                            name=\"date\"\n                            placeholder=\"event date\"\n                            value={this.state.startDate}\n                            onChange={event => this.handleChangeDateTime(event, 'startDate')}\n                        />\n                    </div>\n\n                    <div className=\"input-wrap\">\n                        <label htmlFor=\"time\">\n                            <i className=\"fa fa-clock-o\" aria-hidden=\"true\"/>\n                        </label>\n                        <input\n                            id=\"time\"\n                            type=\"time\"\n                            name=\"time\"\n                            placeholder=\"event time\"\n                            value={this.state.startTime}\n                            onChange={event => this.handleChangeDateTime(event, 'startTime')}\n                        />\n                    </div>\n                    <Select\n                        classNamePrefix='custom-select'\n                        defaultValue={this.state.color}\n                        options={colourOptions}\n                        onChange={this.handleChangeSelect}\n                        components={{ Option: IconOption }}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"notes\"\n                        placeholder=\"notes\"\n                        value={this.state.notes}\n                        onChange={this.handleChange}\n                    />\n                    { this.props.isEdit\n                        ? (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={() => this.props.removeEvent(this.props.inputsValue.id)}>Discard</button>\n                                <button type='button' onClick={this.editEvent}>Edit</button>\n                            </div>\n                        )\n                        : (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={this.props.closeForm}>Cancel</button>\n                                <button type='button' onClick={() => this.props.createEvent(this.state)}>Save</button>\n                            </div>\n                        )\n                    }\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentDate: state.calendar.currentDate,\n        inputsValue: state.calendar.inputsValue,\n        isEdit: state.calendar.isEdit,\n        coordinates: state.calendar.coordinates\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createEvent: data => dispatch(createEvent(data)),\n        editEvent: data => dispatch(editEvent(data)),\n        removeEvent: id => dispatch(removeEvent(id)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(onClickOutside(EventForm))\n","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport listPlugin from '@fullcalendar/list'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport {connect} from 'react-redux'\nimport {\n    closeForm,\n    droppedEvent,\n    getEventsFromLocalStorage,\n    openEventForm,\n    openEventFormWithValues\n} from '../../redux/action/calendar'\nimport {prepareEventItem} from '../../shared/eventModel'\nimport './CalendarView.scss'\n\nclass CalendarView extends React.Component {\n\n    calendarComponentRef = React.createRef()\n    state = {\n        calendarWeekends: true,\n    }\n\n    componentDidMount() {\n        this.props.getEventsFromLocalStorage()\n    }\n\n    createEventForm = event => {\n        this.props.closeForm()\n        this.props.openEventForm(event.date, this.getCoordinates(event, false))\n    }\n\n    editEventForm = info => {\n        this.props.openEventFormWithValues(\n            prepareEventItem('SHOW_EVENT_FORM_WITH_VALUE', info.event),\n            this.getCoordinates(info, true)\n        )\n    }\n\n    getCoordinates = (event, isTypeEdit) => {\n        const elem = event && event.jsEvent && event.jsEvent.toElement\n        if (!event) {\n            return\n        }\n        const container = this.getDomParentElement(elem, (isTypeEdit ? 6 : 5))\n        const rectElement = elem.getBoundingClientRect()\n        const rectContainer = container.getBoundingClientRect()\n        let top = rectContainer.top + Math.round(rectContainer.height / 2) + (isTypeEdit ? 20 : 0)\n        let left = rectElement.left - 15\n        return {top, left}\n    }\n\n    getDomParentElement(elem, levelUp) {\n        let destination = elem\n        let i = 0\n        while (i < levelUp) {\n            if (destination.parentElement) {\n                destination = destination.parentElement\n            } else {\n                return destination\n            }\n            i++\n        }\n        return destination\n    }\n\n    droppedEvent = info => {\n        this.props.droppedEvent(+info.event.id, info.event.start)\n    }\n\n    render() {\n        const calendarPlugins = [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]\n        const calendarHeader = {\n            left: 'today,prev,next',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        }\n        const calendarButtonText = {\n            today: 'Today',\n            month: 'Month',\n            week: 'Week',\n            day: 'Day',\n            list: 'Agenda',\n            prev: 'Back',\n            next: 'Next',\n        }\n        return (\n            <div className='calendar-wrapper'>\n                <FullCalendar\n                    defaultView='dayGridMonth'\n                    header={calendarHeader}\n                    buttonText={calendarButtonText}\n                    plugins={calendarPlugins}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={[...this.props.calendarEvents]}\n                    dateClick={this.createEventForm}\n                    eventClick={this.editEventForm}\n                    firstDay={1}\n                    selectable={true}\n                    editable={true}\n                    droppable={true}\n                    eventDrop={this.droppedEvent}\n                    eventReceive={this.eventReceive}\n                    nowIndicator={true}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        calendarEvents: state.calendar.calendarEvents,\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        openEventForm: (currentDay, coordinates) => dispatch(openEventForm(currentDay, coordinates)),\n        openEventFormWithValues: (values, coordinates) => dispatch(openEventFormWithValues(values, coordinates)),\n        closeForm: () => dispatch(closeForm()),\n        droppedEvent: (id, date) => dispatch(droppedEvent(id, date)),\n        getEventsFromLocalStorage: () => dispatch(getEventsFromLocalStorage())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport './CalendarWrapper.scss'\n\nimport EventPopover from '../../component/EventForm/EventForm'\nimport CalendarView from '../../component/CalendarView/CalendarView'\n\nclass CalendarWrapper extends React.Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <CalendarView />\n                {this.props.showEventForm ? <EventPopover/> : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\n\nexport default connect(mapStateToProps )(CalendarWrapper)\n","import React from 'react'\nimport CalendarWrapper from './container/CalendarWrapper/CalendarWrapper'\n\nfunction App() {\n    return (\n        <CalendarWrapper/>\n    )\n}\n\nexport default App\n","import {prepareEventItem} from '../../shared/eventModel'\n\nimport {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    DROPPED_EVENT,\n    EDIT_EVENT,\n    GET_EVENT_FROM_LOCAL_STORAGE,\n    SET_TO_LOCAL_STORAGE,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from '../action/types'\n\nconst initialState = {\n    showEventForm: false,\n    calendarEvents: [],\n    coordinates: {},\n    inputsValue: {},\n    isEdit: false,\n    currentDate: '',\n}\n\nexport default function calendar(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SHOW_EVENT_FORM: {\n            const date = action.payload.currentDate || new Date()\n            return {\n                ...state,\n                showEventForm: true,\n                coordinates: action.payload.coordinates,\n                inputsValue: prepareEventItem('SHOW_EVENT_FORM', {id: state.calendarEvents.length, date}),\n                isEdit: false\n            }\n        }\n\n        case SHOW_EVENT_FORM_WITH_VALUE: {\n            return {\n                ...state,\n                showEventForm: true,\n                inputsValue: action.payload.values,\n                coordinates: action.payload.coordinates,\n                isEdit: true\n            }\n        }\n\n        case CREATE_EVENT:\n            const calendarEvents = [...state.calendarEvents]\n            calendarEvents.push(\n                prepareEventItem('CREATE_EVENT', {...action.payload,  id: calendarEvents.length})\n            )\n            return {\n                ...state,\n                showEventForm: false,\n                calendarEvents,\n            }\n\n        case EDIT_EVENT:\n            if (action.payload && state.calendarEvents[action.payload.id]) {\n                state.calendarEvents[action.payload.id] = prepareEventItem('EDIT_EVENT', action.payload)\n            }\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents],\n            }\n\n        case REMOVE_EVENT:\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents].filter((value, key) => key !== action.payload),\n                showEventForm: false,\n            }\n\n        case CLOSE_FORM:\n            return {\n                ...state,\n                showEventForm: false,\n            }\n\n        case DROPPED_EVENT:\n            if (action.payload && state.calendarEvents[action.payload.id]) {\n                state.calendarEvents[action.payload.id].start = action.payload.date\n            }\n\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents]\n            }\n\n        case SET_TO_LOCAL_STORAGE:\n            window.localStorage.setItem('calendarEvents', JSON.stringify(state.calendarEvents))\n            return {\n                ...state\n            }\n\n        case GET_EVENT_FROM_LOCAL_STORAGE:\n            return {\n                ...state,\n                calendarEvents: JSON.parse(window.localStorage.getItem('calendarEvents')) || []\n            }\n\n        default :\n            return state\n    }\n}\n","import {combineReducers} from 'redux'\nimport calendar from './reducer/calendar'\n\nexport default combineReducers({\n    calendar\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer'\nimport reduxThunk from 'redux-thunk'\n\nconst loggerMiddleware = store => next => action => {\n    return next(action)\n}\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware,reduxThunk)))\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n"],"sourceRoot":""}