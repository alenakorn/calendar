{"version":3,"sources":["shared/colors.js","shared/dates.js","component/EventForm/EventForm.js","redux/action/calendar.js","redux/action/types.js","component/CalendarView/CalendarView.js","container/CalendarWrapper/CalendarWrapper.js","App.js","redux/reducer/calendar.js","redux/rootReducer.js","index.js"],"names":["colourOptions","value","label","color","fromDate","date","moment","format","split","toDate","str","Option","components","IconOption","props","className","aria-hidden","style","data","margin","EventForm","handleClickOutside","closeForm","handleChange","event","target","name","setState","handleChangeDateTime","type","handleChangeSelect","selectedOption","colorData","handleFormSubmit","preventDefault","editEvent","state","id","inputsValue","title","startDate","start","currentDate","startTime","time","notes","top","this","coordinates","left","onClick","onSubmit","maxLength","placeholder","onChange","htmlFor","classNamePrefix","defaultValue","options","isEdit","removeEvent","createEvent","React","Component","connect","calendar","dispatch","payload","onClickOutside","CalendarView","calendarComponentRef","createRef","calendarWeekends","createEventForm","openEventForm","getCoordinates","editEventForm","info","openEventFormWithValues","extendedProps","backgroundColor","isTypeEdit","elem","jsEvent","toElement","container","getDomParentElement","rectElement","getBoundingClientRect","rectContainer","Math","round","height","droppedEvent","levelUp","destination","i","parentElement","defaultView","header","center","right","buttonText","today","month","week","day","list","prev","next","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","ref","weekends","events","calendarEvents","dateClick","eventClick","firstDay","selectable","editable","droppable","eventDrop","eventReceive","nowIndicator","showEventForm","currentDay","values","CalendarWrapper","App","initialState","Date","combineReducers","action","defaultInputValues","length","dataCreate","push","dataEdit","filter","key","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd1a932e.chunk.js","sourcesContent":["export const colourOptions = [\n    { value: 'blue', label: 'Blue', color: '#3B86FF'},\n    { value: 'ocean', label: 'Ocean', color: '#05b4d9' },\n    { value: 'purple', label: 'Purple', color: '#644faa' },\n    { value: 'red', label: 'Red', color: '#e75339'},\n    { value: 'orange', label: 'Orange', color: '#ff8a0d' },\n    { value: 'yellow', label: 'Yellow', color: '#ffc400' },\n    { value: 'green', label: 'Green', color: '#36B37E' },\n    { value: 'forest', label: 'Forest', color: '#00875A' },\n    { value: 'slate', label: 'Slate', color: '#2f4c58' },\n    { value: 'silver', label: 'Silver', color: '#757a73' },\n];","import moment from \"moment\";\n\nexport const FORMAT = 'YYYY-MM-DD|HH:mm';\n\nexport function fromDate(date) {\n    return moment(date).format(FORMAT).split('|')\n}\n\nexport function toDate(str) {\n    return moment(str, FORMAT).toDate()\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport onClickOutside from 'react-onclickoutside'\nimport { colourOptions } from '../../shared/colors'\nimport Select, {components} from 'react-select'\nimport {closeForm, createEvent, editEvent, removeEvent} from '../../redux/action/calendar'\nimport {fromDate} from '../../shared/dates'\n\nimport './EventForm.scss'\n\nconst { Option } = components\nconst IconOption = props => (\n    <Option {...props}>\n        <i className=\"fa fa-square\" aria-hidden=\"true\" style={{ color: props.data.color, margin: '0 4px 0 0' }}/>\n        {props.data.label}\n    </Option>\n)\n\nclass EventForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state  = {\n            id: this.props.inputsValue.id,\n            title: this.props.inputsValue.title || \"\",\n            startDate: fromDate(this.props.inputsValue.start || this.props.currentDate)[0],\n            startTime: fromDate(this.props.inputsValue.time)[1],\n            notes: this.props.inputsValue.notes || '',\n            color: this.props.inputsValue.colorData || colourOptions[0],\n            colorData: this.props.inputsValue.colorData || colourOptions[0]\n        }\n    }\n\n    handleClickOutside = () => {\n        this.props.closeForm()\n    }\n\n    handleChange = (event) => {\n        if (!(event && event.target && event.target.name)) {\n            return\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleChangeDateTime = (event, type) => {\n        if (!(event && event.target)) {\n            return\n        }\n        this.setState({\n            [type]: event.target.value,\n        })\n    }\n\n    handleChangeSelect = (selectedOption) => {\n        this.setState({\n            color: selectedOption,\n            colorData: selectedOption,\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    editEvent = () => {\n        this.props.editEvent(this.state)\n        this.props.closeForm()\n    }\n\n    render() {\n        return (\n            <div className=\"form-wrapper\" style={{top: this.props.coordinates.top, left: this.props.coordinates.left}}>\n                <button className=\"btn-close\" type=\"button\" onClick={this.props.closeForm}>\n                    <i className=\"fa fa-times-circle-o\" aria-hidden=\"true\"/>\n                </button>\n                <form onSubmit={this.handleFormSubmit}>\n                    <input\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.id}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        maxLength={30}\n                        placeholder=\"event name\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                    />\n                    <div className=\"input-wrap\">\n                        <label htmlFor=\"date\">\n                            <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"/>\n                        </label>\n                        <input\n                            id=\"date\"\n                            type=\"date\"\n                            name=\"date\"\n                            placeholder=\"event date\"\n                            value={this.state.startDate}\n                            onChange={event => this.handleChangeDateTime(event, 'startDate')}\n                        />\n                    </div>\n\n                    <div className=\"input-wrap\">\n                        <label htmlFor=\"time\">\n                            <i className=\"fa fa-clock-o\" aria-hidden=\"true\"/>\n                        </label>\n                        <input\n                            id=\"time\"\n                            type=\"time\"\n                            name=\"time\"\n                            placeholder=\"event time\"\n                            value={this.state.startTime}\n                            onChange={event => this.handleChangeDateTime(event, 'startTime')}\n                        />\n                    </div>\n                    <Select\n                        classNamePrefix='custom-select'\n                        defaultValue={this.state.color}\n                        options={colourOptions}\n                        onChange={this.handleChangeSelect}\n                        components={{ Option: IconOption }}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"notes\"\n                        placeholder=\"notes\"\n                        value={this.state.notes}\n                        onChange={this.handleChange}\n                    />\n                    { this.props.isEdit\n                        ? (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={() => this.props.removeEvent(this.props.inputsValue.id)}>Discard</button>\n                                <button type='button' onClick={this.editEvent}>Edit</button>\n                            </div>\n                        )\n                        : (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={this.props.closeForm}>Cancel</button>\n                                <button type='button' onClick={() => this.props.createEvent(this.state)}>Save</button>\n                            </div>\n                        )\n                    }\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentDate: state.calendar.currentDate,\n        inputsValue: state.calendar.inputsValue,\n        isEdit: state.calendar.isEdit,\n        coordinates: state.calendar.coordinates\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createEvent: data => dispatch(createEvent(data)),\n        editEvent: data => dispatch(editEvent(data)),\n        removeEvent: id => dispatch(removeEvent(id)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(onClickOutside(EventForm))\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT, DROPPED_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from './types'\n\nexport function openEventForm(currentDate, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM,\n        payload: {\n            coordinates,\n            currentDate\n        }\n    }\n}\n\nexport function openEventFormWithValues(values, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM_WITH_VALUE,\n        payload: {\n            values,\n            coordinates\n        }\n    }\n}\n\nexport function editEvent(data) {\n    return {\n        type: EDIT_EVENT,\n        payload: {\n            data\n        },\n    }\n}\n\nexport function createEvent(data) {\n    return {\n        type: CREATE_EVENT,\n        payload: {\n            data\n        },\n    }\n}\n\nexport function removeEvent(id) {\n    return {\n        type: REMOVE_EVENT,\n        payload: {\n            id\n        }\n    }\n}\n\nexport function closeForm() {\n    return {\n        type: CLOSE_FORM\n    }\n}\n\nexport function droppedEvent(id, date) {\n    return {\n        type: DROPPED_EVENT,\n        payload: {\n            id,\n            date\n        }\n    }\n}","export const SHOW_EVENT_FORM = 'SHOW_EVENT_FORM'\nexport const SHOW_EVENT_FORM_WITH_VALUE = 'SHOW_EVENT_FORM_WITH_VALUE'\nexport const CREATE_EVENT = 'CREATE_EVENT'\nexport const EDIT_EVENT = 'EDIT_EVENT'\nexport const REMOVE_EVENT = 'REMOVE_EVENT'\nexport const CLOSE_FORM = 'CLOSE_FORM'\nexport const DROPPED_EVENT = 'DROPPED_EVENT'\n","import React from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport timeGridPlugin from \"@fullcalendar/timegrid\"\nimport listPlugin from '@fullcalendar/list'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport {connect} from 'react-redux'\nimport {closeForm, droppedEvent, openEventForm, openEventFormWithValues} from '../../redux/action/calendar'\n\nimport './CalendarView.scss'\n\nclass CalendarView extends React.Component {\n\n    calendarComponentRef = React.createRef();\n    state = {\n        calendarWeekends: true,\n    }\n\n    createEventForm = event => {\n        this.props.closeForm()\n        this.props.openEventForm(event.date, this.getCoordinates(event, false))\n    }\n\n    editEventForm = info => {\n        this.props.openEventFormWithValues({\n            id: +info.event.id,\n            title: info.event.title,\n            start: info.event.start,\n            time: info.event.start,\n            notes: info.event.extendedProps.notes,\n            color: info.event.backgroundColor,\n            colorData: info.event.extendedProps.colorData\n        },  this.getCoordinates(info, true))\n    }\n\n    getCoordinates = (event, isTypeEdit) => {\n        const elem = event && event.jsEvent && event.jsEvent.toElement\n        if (!event) {\n            return\n        }\n        const container = this.getDomParentElement(elem, (isTypeEdit ? 6 : 5))\n        const rectElement = elem.getBoundingClientRect()\n        const rectContainer = container.getBoundingClientRect()\n        let top = rectContainer.top + Math.round(rectContainer.height / 2) + (isTypeEdit ? 20 : 0)\n        let left = rectElement.left - 15\n        return {top, left}\n    }\n\n    getDomParentElement(elem, levelUp) {\n        let destination = elem;\n        let i = 0;\n        while (i < levelUp) {\n            if (destination.parentElement) {\n                destination = destination.parentElement\n            } else {\n                return destination;\n            }\n            i++\n        }\n        return destination;\n    }\n\n    droppedEvent = info => {\n        this.props.droppedEvent(+info.event.id, info.event.start)\n    }\n\n    render() {\n        return (\n            <div className='calendar-wrapper'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    header={{\n                        left: \"today,prev,next\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                    }}\n                    buttonText={{\n                        today: 'Today',\n                        month: 'Month',\n                        week: 'Week',\n                        day: 'Day',\n                        list: 'Agenda',\n                        prev: 'Back',\n                        next: 'Next',\n\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={[...this.props.calendarEvents]}\n                    dateClick={this.createEventForm}\n                    eventClick={this.editEventForm}\n                    firstDay={1}\n                    selectable={true}\n                    editable={true}\n                    droppable={true}\n                    eventDrop={this.droppedEvent}\n                    eventReceive={this.eventReceive}\n                    nowIndicator={true}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        calendarEvents: state.calendar.calendarEvents,\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        openEventForm: (currentDay, coordinates) => dispatch(openEventForm(currentDay, coordinates)),\n        openEventFormWithValues: (values, coordinates) => dispatch(openEventFormWithValues(values, coordinates)),\n        closeForm: () => dispatch(closeForm()),\n        droppedEvent: (id, date) => dispatch(droppedEvent(id, date))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport './CalendarWrapper.scss'\n\nimport EventPopover from '../../component/EventForm/EventForm'\nimport CalendarView from '../../component/CalendarView/CalendarView'\n\nclass CalendarWrapper extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <CalendarView />\n                {this.props.showEventForm ? <EventPopover/> : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\n\nexport default connect(mapStateToProps )(CalendarWrapper)\n","import React from 'react';\nimport CalendarWrapper from './container/CalendarWrapper/CalendarWrapper'\n\nfunction App() {\n  return (\n        <CalendarWrapper/>\n  )\n}\n\nexport default App\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    DROPPED_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from '../action/types'\nimport {toDate} from \"../../shared/dates\";\n\nconst initialState = {\n    showEventForm: false,\n    calendarEvents: [\n        {\n            id: 0,\n            title: 'My test event',\n            start: new Date(),\n            time: '',\n            notes: 'fu',\n            color: '#3B86FF',\n            colorData: ''\n        }\n    ],\n    coordinates: {},\n    inputsValue: {},\n    isEdit: false,\n    currentDate: '',\n}\n\nexport default function calendar(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SHOW_EVENT_FORM: {\n            const date = action.payload.currentDate || new Date()\n            const defaultInputValues = {\n                id: state.calendarEvents.length,\n                start: date,\n                time: date,\n                title: '',\n                notes: '',\n                color: ''\n            }\n            return {\n                ...state,\n                showEventForm: true,\n                coordinates: action.payload.coordinates,\n                inputsValue: defaultInputValues,\n                isEdit: false\n            }\n        }\n\n        case SHOW_EVENT_FORM_WITH_VALUE: {\n            return {\n                ...state,\n                showEventForm: true,\n                inputsValue: action.payload.values,\n                coordinates: action.payload.coordinates,\n                isEdit: true\n            }\n        }\n\n        case CREATE_EVENT:\n            const dataCreate = action.payload.data\n            const calendarEvents = [...state.calendarEvents]\n\n            calendarEvents.push({\n                id: calendarEvents.length,\n                title: dataCreate.title,\n                start: toDate(`${dataCreate.startDate}|${dataCreate.startTime}`),\n                time: dataCreate.time,\n                notes: dataCreate.notes,\n                color: dataCreate.color.color,\n                colorData: dataCreate.colorData\n            })\n\n            return {\n                ...state,\n                showEventForm: false,\n                calendarEvents,\n            }\n\n        case EDIT_EVENT:\n            const dataEdit = action.payload.data\n            if (state.calendarEvents[dataEdit.id]) {\n                state.calendarEvents[dataEdit.id] = {\n                    id: dataEdit.id,\n                    title: dataEdit.title,\n                    start: toDate(`${dataEdit.startDate}|${dataEdit.startTime}`),\n                    time: dataEdit.time,\n                    notes: dataEdit.notes,\n                    color: dataEdit.color.color,\n                    colorData: dataEdit.colorData\n                }\n            }\n\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents],\n            }\n\n        case REMOVE_EVENT:\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents].filter((value, key) => key !== action.payload.id),\n                showEventForm: false,\n            }\n\n        case CLOSE_FORM:\n            return {\n                ...state,\n                showEventForm: false,\n            }\n\n        case DROPPED_EVENT:\n            if (state.calendarEvents[action.payload.id]) {\n                state.calendarEvents[action.payload.id].start = action.payload.date\n            }\n\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents]\n            }\n\n        default :\n            return state;\n    }\n\n}\n","import {combineReducers} from 'redux';\nimport calendar from './reducer/calendar'\n\nexport default combineReducers({\n    calendar: calendar\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer'\nimport reduxThunk from 'redux-thunk'\n\nconst loggerMiddleware = store => next => action => {\n    const result = next(action);\n    return result;\n};\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware,reduxThunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}