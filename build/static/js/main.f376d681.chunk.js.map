{"version":3,"sources":["shared/dates.js","component/EventForm/EventForm.js","redux/action/calendar.js","redux/action/types.js","component/CalendarView/CalendarView.js","container/CalendarWrapper/CalendarWrapper.js","App.js","redux/reducer/calendar.js","redux/rootReducer.js","index.js"],"names":["fromDate","date","moment","format","split","toDate","str","EventForm","props","handleChange","event","target","name","setState","value","handleChangeDateTime","type","handleFormSubmit","preventDefault","editEvent","state","closeForm","id","inputsValue","title","startDate","start","currentDate","startTime","time","notes","className","style","top","this","coordinates","left","onClick","aria-hidden","onSubmit","placeholder","onChange","isEdit","removeEvent","createEvent","React","Component","connect","calendar","dispatch","data","console","log","CalendarView","calendarComponentRef","createRef","calendarWeekends","createEventForm","rect","jsEvent","toElement","getBoundingClientRect","bottom","height","openEventForm","editEventForm","openEventFormWithValues","extendedProps","getCoordinates","defaultView","header","center","right","buttonText","today","month","week","day","list","prev","next","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","ref","weekends","events","calendarEvents","dateClick","eventClick","firstDay","selectable","editable","droppable","eventDrop","drop","eventReceive","showEventForm","currentDay","values","CalendarWrapper","App","initialState","Date","colors","combineReducers","action","defaultInputValues","length","push","filter","key","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f376d681.chunk.js","sourcesContent":["import moment from \"moment\";\n\nexport const FORMAT = 'YYYY-MM-DD|HH:mm';\n\nexport function fromDate(date) {\n    return moment(date).format(FORMAT).split('|')\n}\n\nexport function toDate(str) {\n    return moment(str, FORMAT).toDate()\n}\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {closeForm, createEvent, editEvent, removeEvent} from '../../redux/action/calendar'\nimport {fromDate} from \"../../shared/dates\";\n\nimport './EventForm.scss'\n\nclass EventForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state  = {\n            id: this.props.inputsValue.id,\n            title: this.props.inputsValue.title || \"\",\n            startDate: fromDate(this.props.inputsValue.start || this.props.currentDate)[0],\n            startTime: fromDate(this.props.inputsValue.time)[1],\n            notes: this.props.inputsValue.notes || ''\n        }\n    }\n\n    handleChange = (event) => {\n        if (!(event && event.target && event.target.name)) {\n            return;\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleChangeDateTime = (event, type) => {\n        if (!(event && event.target)) {\n            return;\n        }\n        this.setState({\n            [type]: event.target.value,\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    editEvent = () => {\n        this.props.editEvent(this.state)\n        this.props.closeForm()\n    }\n\n    render() {\n        return (\n            <div className=\"form-wrapper\" style={{top: this.props.coordinates.top, left: this.props.coordinates.left}}>\n                <button className=\"btn-close\" type=\"button\" onClick={this.props.closeForm}>\n                    <i className=\"fa fa-times-circle-o\" aria-hidden=\"true\"/>\n                </button>\n                <form onSubmit={this.handleFormSubmit}>\n                    <input\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.id}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"event name\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                    />\n\n                    <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"/>\n                    <input\n                        type=\"date\"\n                        name=\"date\"\n                        placeholder=\"event date\"\n                        value={this.state.startDate}\n                        onChange={event => this.handleChangeDateTime(event, 'startDate')}\n                    />\n\n                    <i className=\"fa fa-clock-o\" aria-hidden=\"true\"/>\n                    <input\n                        type=\"time\"\n                        name=\"time\"\n                        placeholder=\"event time\"\n                        value={this.state.startTime}\n                        onChange={event => this.handleChangeDateTime(event, 'startTime')}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"notes\"\n                        placeholder=\"notes\"\n                        value={this.state.notes}\n                        onChange={this.handleChange}\n                    />\n                    { this.props.isEdit\n                        ? (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={() => this.props.removeEvent(this.props.inputsValue.id)}>Discard</button>\n                                <button type='button' onClick={this.editEvent}>Edit</button>\n                            </div>\n                        )\n                        : (\n                            <div className='btn-wrap'>\n                                <button className='btn-cancel' onClick={this.props.closeForm}>Cancel</button>\n                                <button type='button' onClick={() => this.props.createEvent(this.state)}>Save</button>\n                            </div>\n                        )\n                    }\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentDate: state.calendar.currentDate,\n        inputsValue: state.calendar.inputsValue,\n        isEdit: state.calendar.isEdit,\n        coordinates: state.calendar.coordinates\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createEvent: data => dispatch(createEvent(data)),\n        editEvent: data => dispatch(editEvent(data)),\n        removeEvent: id => dispatch(removeEvent(id)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventForm);\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from './types'\n\nexport function openEventForm(currentDate, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM,\n        coordinates,\n        currentDate\n    }\n}\n\nexport function openEventFormWithValues(values, coordinates) {\n    return {\n        type: SHOW_EVENT_FORM_WITH_VALUE,\n        values,\n        coordinates\n    }\n}\n\nexport function editEvent(data) {\n    return {\n        type: EDIT_EVENT,\n        data,\n    }\n}\n\nexport function createEvent(data) {\n    return {\n        type: CREATE_EVENT,\n        data,\n    }\n}\n\nexport function removeEvent(id) {\n    console.log(id)\n    return {\n        type: REMOVE_EVENT,\n        id\n    }\n}\n\nexport function closeForm() {\n    return {\n        type: CLOSE_FORM\n    }\n}\n","export const SHOW_EVENT_FORM = 'SHOW_EVENT_FORM'\nexport const SHOW_EVENT_FORM_WITH_VALUE = 'SHOW_EVENT_FORM_WITH_VALUE'\nexport const CREATE_EVENT = 'CREATE_EVENT'\nexport const EDIT_EVENT = 'EDIT_EVENT'\nexport const REMOVE_EVENT = 'REMOVE_EVENT'\nexport const CLOSE_FORM = 'CLOSE_FORM'\n","import React from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport timeGridPlugin from \"@fullcalendar/timegrid\"\nimport listPlugin from '@fullcalendar/list'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport {connect} from 'react-redux'\nimport {closeForm, openEventForm, openEventFormWithValues} from '../../redux/action/calendar'\n\nimport './CalendarView.scss'\n\nclass CalendarView extends React.Component {\n\n    calendarComponentRef = React.createRef();\n    state = {\n        calendarWeekends: true,\n    }\n\n    createEventForm = event => {\n        const rect = event.jsEvent.toElement.getBoundingClientRect()\n        const coordinates = {\n            top: rect.bottom - (rect.height/2),\n            left: rect.left\n        }\n        this.props.closeForm()\n        this.props.openEventForm(event.date, coordinates)\n    }\n\n    editEventForm = (event) => {\n        const rect = event.jsEvent.toElement.getBoundingClientRect()\n        this.props.openEventFormWithValues({\n            id: +event.event.id,\n            title: event.event.title,\n            start: event.event.start,\n            time: event.event.start,\n            notes: event.event.extendedProps.notes\n        }, this.getCoordinates(rect))\n    }\n\n    getCoordinates = (rect) => {\n        return  {\n            top: rect.bottom - (rect.height/2) + 20,\n            left: rect.left - 20\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='calendar-wrapper'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    header={{\n                        left: \"today,prev,next\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                    }}\n                    buttonText={{\n                        today: 'Today',\n                        month: 'Month',\n                        week: 'Week',\n                        day: 'Day',\n                        list: 'Agenda',\n                        prev: 'Back',\n                        next: 'Next',\n\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={[...this.props.calendarEvents]}\n                    dateClick={this.createEventForm}\n                    eventClick={this.editEventForm}\n                    firstDay={1}\n                    selectable={true}\n                    editable={true}\n                    droppable={true}\n                    eventDrop={this.drop}\n                    eventReceive={this.eventReceive}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        calendarEvents: state.calendar.calendarEvents,\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        openEventForm: (currentDay, coordinates) => dispatch(openEventForm(currentDay, coordinates)),\n        openEventFormWithValues: (values, coordinates) => dispatch(openEventFormWithValues(values, coordinates)),\n        closeForm: () => dispatch(closeForm()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport './CalendarWrapper.scss'\n\nimport EventPopover from '../../component/EventForm/EventForm'\nimport CalendarView from '../../component/CalendarView/CalendarView'\n\nclass CalendarWrapper extends React.Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <CalendarView />\n                {this.props.showEventForm ? <EventPopover/> : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showEventForm: state.calendar.showEventForm,\n    }\n}\n\n\nexport default connect(mapStateToProps )(CalendarWrapper)\n","import React from 'react';\nimport CalendarWrapper from './container/CalendarWrapper/CalendarWrapper'\n\nfunction App() {\n  return (\n        <CalendarWrapper/>\n  )\n}\n\nexport default App\n","import {\n    CLOSE_FORM,\n    CREATE_EVENT,\n    EDIT_EVENT,\n    REMOVE_EVENT,\n    SHOW_EVENT_FORM,\n    SHOW_EVENT_FORM_WITH_VALUE\n} from '../action/types'\nimport {toDate} from \"../../shared/dates\";\n\nconst initialState = {\n    showEventForm: false,\n    calendarEvents: [\n        {\n            id: 0,\n            title: 'My test event',\n            start: new Date(),\n            time: '',\n            notes: 'fu'\n        }\n    ],\n    coordinates: {},\n    inputsValue: {},\n    isEdit: false,\n    currentDate: '',\n    colors: '',\n}\n\nexport default function calendar(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SHOW_EVENT_FORM: {\n            const date = action.currentDate || new Date()\n            const defaultInputValues = {\n                id: state.calendarEvents.length,\n                start: date,\n                time: date,\n                title: '',\n                notes: '',\n            }\n            return {\n                ...state,\n                showEventForm: true,\n                coordinates: action.coordinates,\n                inputsValue: defaultInputValues\n            }\n        }\n\n        case SHOW_EVENT_FORM_WITH_VALUE: {\n            return {\n                ...state,\n                showEventForm: true,\n                inputsValue: action.values,\n                coordinates: action.coordinates,\n                isEdit: true\n            }\n        }\n\n        case CREATE_EVENT:\n            const calendarEvents = [...state.calendarEvents]\n            calendarEvents.push({\n                id: calendarEvents.length,\n                title: action.data.title,\n                start: toDate(`${action.data.startDate}|${action.data.startTime}`),\n                time: action.data.time,\n                notes: action.data.notes\n            })\n            return {\n                ...state,\n                showEventForm: false,\n                calendarEvents,\n            }\n\n        case EDIT_EVENT:\n            if (state.calendarEvents[action.data.id]) {\n                state.calendarEvents[action.data.id] = {\n                    id: action.data.id,\n                    title: action.data.title,\n                    start: toDate(`${action.data.startDate}|${action.data.startTime}`),\n                    time: action.data.time,\n                    notes: action.data.notes\n                }\n            }\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents],\n            }\n\n        case REMOVE_EVENT:\n            return {\n                ...state,\n                calendarEvents: [...state.calendarEvents].filter((value, key) => key !== action.id),\n                showEventForm: false,\n            }\n\n        case CLOSE_FORM:\n            return {\n                ...state,\n                showEventForm: false,\n            }\n\n        default :\n            return state;\n    }\n\n}\n","import {combineReducers} from 'redux';\nimport calendar from './reducer/calendar'\n\nexport default combineReducers({\n    calendar: calendar\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer'\nimport reduxThunk from 'redux-thunk'\n\nconst loggerMiddleware = store => next => action => {\n    const result = next(action);\n    return result;\n};\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware,reduxThunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}